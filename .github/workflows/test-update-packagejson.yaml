name: (Test) Update package.json

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "git tag you want create. (sample 1.0.0)"
        required: true
        default: ""

jobs:
  set-tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.set-tag.outputs.tag }}
    steps:
      - name: Set tag
        id: set-tag
        run: |
          tag=${{ github.event_name == 'workflow_dispatch' && inputs.tag || format('1.2.{0}', github.run_number) }}
          echo "tag=$tag" >> "$GITHUB_OUTPUT"

  update-packagejson:
    needs: [ set-tag ]
    if: ${{ github.actor != 'dependabot[bot]' }}
    uses: ./.github/workflows/reusable-update-packagejson.yaml
    secrets:
      BOT_APP_ID: ${{ secrets.BOT_APP_ID }}
      BOT_PRIVATE_KEY: ${{ secrets.BOT_PRIVATE_KEY }}
    with:
      ref: ${{ github.ref }}
      file-path: ./Packages/TestSimplePackage/package.json
      tag: ${{ inputs.tag }}
      dry-run: true

  test:
    needs: [ set-tag, update-packagejson]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Check update-packagejson with new version should update commit id
        run: |
          echo "DEBUG: tag                : ${{ needs.set-tag.outputs.tag }}"
          echo "DEBUG: github.sha         : ${{ github.sha }}"
          echo "DEBUG: update-packagejson : ${{ needs.update-packagejson.outputs.sha }}"

          echo -n "FACT: sha for update-packagejson should be updated. "
          if [[ "${{ needs.update-packagejson.outputs.sha }}" != "${{ github.sha }}" ]]; then echo "[O PASS]"; else echo "[X FAIL]" && exit 1; fi

          echo -n "FACT: is-branch-created for update-packagejson should be created. "
          if [[ "${{ needs.update-packagejson.outputs.is-branch-created }}" == "true" ]]; then echo "[O PASS]"; else echo "[X FAIL]" && exit 1; fi

          echo -n "FACT: branch-name for update-packagejson should be expected. "
          if [[ "${{ needs.update-packagejson.outputs.branch-name }}" == "test-release/${{ needs.set-tag.outputs.tag }}" ]]; then echo "[O PASS]"; else echo "[X FAIL]" && exit 1; fi

  cleanup:
    if: ${{ needs.update-packagejson3.outputs.is-branch-created == 'true' }}
    needs: [ update-packagejson ]
    uses: ./.github/workflows/reusable-clean-packagejson-branch.yaml
    with:
      branch: ${{ needs.update-packagejson3.outputs.branch-name }}