name: Update package.json

on:
  workflow_call:
    inputs:
      file-path:
        description: "Paths of files to update"
        required: true
        type: string
      tag:
        description: "Version tag to use in updates"
        required: true
        type: string
      dry-run:
        description: "Simulate changes without pushing"
        required: true
        type: boolean
      ref:
        description: "Git reference to checkout"
        required: false
        type: string
        default: ''
    secrets:
      CUSTOM_GITHUB_TOKEN:
        required: true
    outputs:
      sha:
        description: "Git commit's SHA"
        value: ${{ jobs.update-packagejson.outputs.sha }}
      branch-name:
        description: "Branch created name"
        value: ${{ jobs.update-packagejson.outputs.branch-name }}
      is-branch-created:
        description: "Whether a branch was created"
        value: ${{ jobs.update-packagejson.outputs.is-branch-created }}

jobs:
  validate:
    uses: Cysharp/Actions/.github/workflows/validate-tag.yaml@main
    with:
      tag: ${{ inputs.tag }}
    secrets: inherit

  update-packagejson:
    needs: [validate]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      sha: ${{ steps.commit.outputs.sha }}
      branch-name: ${{ steps.configure.outputs.branch-name }}
      is-branch-created: ${{ steps.commit.outputs.is-branch-created }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
          fetch-depth: 0
          # ここを`true`にすることで既存トークンを利用可能にします
          persist-credentials: true

      - name: Update files to version ${{ needs.validate.outputs.normalized_tag }}
        run: |
          expected="${{ needs.validate.outputs.normalized_tag }}"
          while read -r file_path; do
            if [[ "$file_path" == "" ]]; then continue; fi

            echo "Start $file_path"
            file_name=$(basename "$file_path")

            echo "::group::Before"
              cat "$file_path"
            echo "::endgroup::"

            echo "::group::Updating"
              if [[ "${file_name}" == "package.json" ]]; then
                sed -i -e "s/\(\"version\":\) \"\(.*\)\",/\1 \"${{ needs.validate.outputs.normalized_tag }}\",/" "${file_path}"
              else
                echo "Unknown file name ${file_name} is specified."
                exit 1
              fi
            echo "::endgroup::"

            echo "::group::After"
              cat "$file_path"
            echo "::endgroup::"
          done <<< "${{ inputs.file-path }}"

      - name: Commit changes
        id: commit
        env:
          GITHUB_TOKEN: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
        run: |
          if [[ "${{ inputs.dry-run }}" != "true" ]]; then
            git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git config --local user.name "github-actions[bot]"
            git commit -am "feat: Update package.json to ${{ inputs.tag }}"
            echo "sha=$(git rev-parse HEAD)" | tee -a "$GITHUB_OUTPUT"
            echo "branch-name=test-release/${{ inputs.tag }}" | tee -a "$GITHUB_OUTPUT"
            echo "is-branch-created=true" | tee -a "$GITHUB_OUTPUT"
          else
            echo "Dry-run only, no changes committed."
            echo "is-branch-created=false" | tee -a "$GITHUB_OUTPUT"
          fi

      - name: Push changes
        if: ${{ steps.commit.outputs.is-branch-created == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
        run: |
          git push origin HEAD:${{ inputs.ref }}