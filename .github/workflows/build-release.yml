name: build-release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Release tag (e.g., v1.0.0)"
        required: true
        type: string
      dry-run:
        description: "Enable dry-run (safe mode)"
        required: true
        default: false
        type: boolean

jobs:
  generate-token:
    runs-on: ubuntu-latest
    outputs:
      token: ${{ steps.create-token.outputs.token }}
    steps:
      - name: Create GitHub App Token
        id: create-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.BOT_APP_ID }}
          private-key: ${{ secrets.BOT_PRIVATE_KEY }}

  update-packagejson:
    needs: generate-token
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository with Custom Token
        uses: actions/checkout@v4
        with:
          token: ${{ needs.generate-token.outputs.token }}
          persist-credentials: false

      - name: Update version in files
        env:
          GITHUB_TOKEN: ${{ needs.generate-token.outputs.token }}
        run: |
          # Update package.json or other files as required
          echo "Updating files with new version: ${{ inputs.tag }}"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          # Add file updates here
          git add .
          git commit -m "feat: Bump version to ${{ inputs.tag }}"

      - name: Push Commit to Branch
        env:
          GITHUB_TOKEN: ${{ needs.generate-token.outputs.token }}
        run: |
          if [[ "${{ inputs.dry-run }}" == "true" ]]; then
            echo "Dry-run mode. No changes pushed."
          else
            git push origin HEAD:feature/release-${{ inputs.tag }}
          fi

  release:
    needs: [update-packagejson]
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ inputs.tag }}
          release_name: Release ${{ inputs.tag }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ needs.generate-token.outputs.token }}